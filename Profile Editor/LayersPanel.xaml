<Grid x:Class="GadrocsWorkshop.Helios.ProfileEditor.LayersPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:local="clr-namespace:GadrocsWorkshop.Helios.ProfileEditor.ViewModel"
             xmlns:profileEditor="clr-namespace:GadrocsWorkshop.Helios.ProfileEditor"
             d:DesignHeight="300" 
             d:DesignWidth="300" 
             Focusable="False"
             d:DataContext="{d:DesignInstance Type={x:Type profileEditor:LayersPanel}}"
             Background="{StaticResource ToolBackground}">
    <Grid.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="HiddenCheckBoxTemplate" TargetType="{x:Type CheckBox}">
                <Image Name="ButtonImage" Source="ToolbarGraphics/VisibleIcon.png" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="ButtonImage" Property="Source" Value="ToolbarGraphics/HiddenIcon.png" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="HiddenCheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="Template" Value="{StaticResource HiddenCheckBoxTemplate}" />
            </Style>

            <ControlTemplate x:Key="LockCheckBoxTemplate" TargetType="{x:Type CheckBox}">
                <Image Name="ButtonImage" Source="ToolbarGraphics/UnlockedIcon.png" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="ButtonImage" Property="Source" Value="ToolbarGraphics/LockedIcon.png" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="LockCheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="Template" Value="{StaticResource LockCheckBoxTemplate}" />
            </Style>

            <ControlTemplate x:Key="SnapCheckBoxTemplate" TargetType="{x:Type CheckBox}">
                <Image Name="ButtonImage" Source="ToolbarGraphics/NoSnapIcon.png" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="ButtonImage" Property="Source" Value="ToolbarGraphics/SnapIcon.png" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="SnapCheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="Template" Value="{StaticResource SnapCheckBoxTemplate}" />
            </Style>
        </ResourceDictionary>
    </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <ToolBarTray Grid.Row="0" IsLocked="True" Background="Transparent">
        <ToolBar Height="28" Background="Transparent">
            <Button Command="{Binding MoveForwardCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/BringForwardIcon.png" />
                <Button.ToolTip>Bring selected controls forward so they display on top of other controls.</Button.ToolTip>
            </Button>
            <Button Command="{Binding MoveBackCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/SendBackIcon.png" />
                <Button.ToolTip>Send selectd controls back so they display under other controls.</Button.ToolTip>
            </Button>
            <Separator />
            <Button Command="{Binding MoveForwardFullyCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/BringForwardFullyIcon.png" />
                <Button.ToolTip>Bring selected controls all the way forward so they display on top of all other controls.</Button.ToolTip>
            </Button>
            <Button Command="{Binding MoveBackFullyCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/SendBackFullyIcon.png" />
                <Button.ToolTip>Send selected controls all the way back so they display under all other controls.</Button.ToolTip>
            </Button>
            <Separator />
            <Button Command="{Binding ToggleHideControlsCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/HiddenIcon.png" />
                <Button.ToolTip>Hide or Unhide selected controls.</Button.ToolTip>
            </Button>
            <Button Command="{Binding ToggleLockControlsCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/LockedIcon.png" />
                <Button.ToolTip>Lock or Unlock selected controls.</Button.ToolTip>
            </Button>
            <Button Command="{Binding LockAllControlsCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/LockedPlusIcon.png" />
                <Button.ToolTip>Lock all controls.</Button.ToolTip>
            </Button>
            <Button Command="{Binding UnlockAllControlsCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/UnLockedPlusIcon.png" />
                <Button.ToolTip>Unlock all controls.</Button.ToolTip>
            </Button>
            <Button Command="{Binding ToggleSnapControlsCommand}" Focusable="False">
                <Image Source="ToolbarGraphics/SnapIcon.png" />
                <Button.ToolTip>Enable or disable snapping to selected controls.</Button.ToolTip>
            </Button>
        </ToolBar>
    </ToolBarTray>
    <Border Grid.Row="1" BorderBrush="#FF808080" BorderThickness="0,1,0,0">
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Focusable="False">
            <ItemsControl BorderThickness="0" ItemsSource="{Binding Controls}" Focusable="False">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:VisualsListItem}">
                        <Border BorderBrush="#FF808080" BorderThickness="0,0,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0" HorizontalAlignment="Center" IsChecked="{Binding Control.IsHidden}" VerticalAlignment="Center" Margin="2" Focusable="false" Style="{StaticResource HiddenCheckBox}" />
                                <CheckBox Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding Control.IsLocked}" VerticalAlignment="Center" Style="{StaticResource LockCheckBox}" Checked="ItemLockChecked" Tag="{Binding Control}" Margin="0,2,2,2" Focusable="False" />
                                <Border Grid.Column="2" BorderBrush="#FF808080" BorderThickness="0,0,1,0">
                                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Control.IsSnapTarget}" VerticalAlignment="Center" Style="{StaticResource SnapCheckBox}" Margin="0,2,2,2" Focusable="False" />
                                </Border>
                                <TextBlock Grid.Column="3" Name="ItemText" Text="{Binding Control.Name}" Tag="{Binding Control}" MouseDown="OnMouseDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="2" />
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="ItemText" Property="Background" Value="LightBlue" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Border>
</Grid>